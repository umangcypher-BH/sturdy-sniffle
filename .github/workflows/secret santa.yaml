name: secret santa

on:
     push:
       branches:
        - "master"
     
jobs:
   build:
      
      runs-on: ubuntu-latest
    
      steps:
      - name: copy template file from  ReusableWorkflow repo
        run: |
          git clone https://${{ secrets.GH_TOKEN }}@github.com/umangcypher-BH/sturdy-sniffle.git
          
      - name: docker pull request
        run: |
          docker pull umangcypherbh/trivyscan2
      - name: copy the docker file to template directory
        run: |
          cp ${{ inputs.docker_file_path }}./sturdy-sniffle/Dockerfile ./sturdy-sniffle/configs   
      - name: Install Trivy CLI
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.31.3
      - name: trivy image scan
        run: |
          trivy image  umangcypherbh/trivyscan2:latestv1.0
          
      - name: downloading  vulnerability  database
        run: |
          /usr/local/bin/trivy image --download-db-only
      - name: Run Trivy  scan for Docker Image and generate html report
        run: |
          docker run  -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:0.28.0 image umangcypherbh/trivyscan2:latestv1.0
      - name: Run Trivy scan for filesystem and generate html report(Trivy will look for vulnerabilities based on lock files such as Gemfile.lock and package-lock.json)
        run: |
          /usr/local/bin/trivy -q fs . --format template --template "@./sturdy-sniffle/html.tpl" --ignorefile "./sturdy-sniffle/.trivyignore" -o Report2.html ${{ inputs.Packages_lock }}
      
      - name: Run Trivy scan for dockerfile 
        run: |
          /usr/local/bin/trivy conf --policy ./sturdy-sniffle/policies --format template --template "@./sturdy-sniffle/html.tpl" -o Report3.html  --namespaces user ./sturdy-sniffle/configs
      - name: Append all reports to Report.html
        run: |
          cat Report3.html >> Report2.html;cat Report2.html >> Report.html
      - name: Upload Trivy vulnerabilities Report to artifact
        uses: actions/upload-artifact@v3
        with:
          path: "Report.html"
      - name: check for Crtical & High vulnerabilities in Docker Image
        run: |
          docker run  -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:0.28.0 image umangcypherbh/trivyscan2:latestv1.0
          
      - name: Check for filesystem (Trivy will look for vulnerabilities based on lock files such as Gemfile.lock and package-lock.json)
        run: |
          /usr/local/bin/trivy -q fs . --exit-code 1 --severity CRITICAL,HIGH --ignore-unfixed --ignorefile "./sturdy-sniffle/.trivyignore"  ${{ inputs.Packages_lock }}      
      - name: check for Misconfig in Dockerfile (Optional)
        run: |
          /usr/local/bin/trivy conf --exit-code 1 --severity CRITICAL --policy ./sturdy-sniffle/policies  --namespaces user ./sturdy-sniffle/configs
 

      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Docker Login
        uses: docker/login-action@v2
        with:          
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} 
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/trivyscan2:latestv1.0
